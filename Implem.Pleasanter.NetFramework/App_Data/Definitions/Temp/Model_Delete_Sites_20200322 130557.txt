public ErrorData Delete(Context context, SiteSettings ss)
{
    var siteMenu = SiteInfo.TenantCaches.Get(TenantId)?
        .SiteMenu
        .Children(
            context: context,
            siteId: ss.SiteId,
            withParent: true);
    Repository.ExecuteNonQuery(
        context: context,
        transactional: true,
        statements: new SqlStatement[]
        {
            Rds.DeleteItems(
                factory: context,
                where: Rds.ItemsWhere().SiteId_In(siteMenu.Select(o => o.SiteId))),

<!--Model_Delete_SitesItems-->

            Rds.DeleteSites(
                factory: context,
                where: Rds.SitesWhere()
                    .TenantId(TenantId)
                    .SiteId_In(siteMenu.Select(o => o.SiteId)))
        });
    return new ErrorData(type: Error.Types.None);
}