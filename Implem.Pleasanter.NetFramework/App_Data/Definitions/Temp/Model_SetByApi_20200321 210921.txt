public void SetByApi(Context context, SiteSettings ss)
{
    var data = context.RequestDataString.Deserialize<#ModelName#ApiModel>();
    if (data == null)
    {
        return;
    }

<!--Model_SetByApi_ColumnCases-->

    if (data.Comments != null) Comments.Prepend(context: context, ss: ss, body: data.Comments);
    if (data.VerUp != null) VerUp = data.VerUp.ToBool();
    data.ClassHash?.ForEach(o => Class(
        columnName: o.Key,
        value: o.Value));
    data.NumHash?.ForEach(o => Num(
        columnName: o.Key,
        value: o.Value));
    data.DateHash?.ForEach(o => Date(
        columnName: o.Key,
        value: o.Value.ToUniversal(context: context)));
    data.DescriptionHash?.ForEach(o => Description(
        columnName: o.Key,
        value: o.Value));
    data.CheckHash?.ForEach(o => Check(
        columnName: o.Key,
        value: o.Value));
    data.AttachmentsHash?.ForEach(o =>
    {
        string columnName = o.Key;
        Attachments newAttachments = o.Value;
        Attachments oldAttachments = AttachmentsHash.Get(columnName);
        if (oldAttachments != null)
        {
            var newGuidSet = new HashSet<string>(newAttachments.Select(x => x.Guid).Distinct());
            newAttachments.AddRange(oldAttachments.Where((oldvalue) => !newGuidSet.Contains(oldvalue.Guid)));
        }
        Attachments(columnName: columnName, value: newAttachments);
    });

<!--Model_SetByForm_SetByFormula-->
<!--Model_SetByForm_Site-->
<!--Model_SetChoiceHash-->

}